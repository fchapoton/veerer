# the square-tiled example in Q(8,0)
# with its (almost) symplectic basis {\gamma_i}_{i=1,...,6}

V0 = VeeringTriangulation("(0,1,2)(~1,3,~0)(4,5,~3)(6,7,~5)(8,9,~6)(10,11,~9)(~7,12,~2)(13,~8,~12)(~11,14,~13)(~14,15,~4)(16,17,~15)(~17,~10,~16)",
        "RRBBRRBRRRBRRBRBRR")

###############################################################################
# Modified example in Q(8)  ("removing the marked point")
#

V1 = VeeringTriangulation("(0,1,2)(~1,3,~0)(~3,4,5)(~5,6,7)(8,9,~6)(~7,10,11)(~11,~8,~2)(~10,12,~4)(13,14,~12)(~13,~14,~9)",
        "RRBBRRBRRBRBBRR")

# in V1, we have 5 vertex cycles (they are independent in homology)
# and generate the subspace anihilated by \gamma_2 - 2 \gamma_3 + \gamma_5
# \gamma_2
# \gamma_3
# \gamma_5
# \gamma_1 + \gamma_6
# \gamma_1 - \gamma_6 + \gamma_4

for c in V1.vertex_cycles():
    print(' '.join("%2d:%d" % (i,j) for i,j in enumerate(c) if j))

# if we flip the edge 14 (in BLUE) we kill a vertex cycles but create
# two new ones... the space in H_1(S; Z) generated by the vertex cycles
# remain of codimension 1

V2 = V1.copy()
V2.flip(14, BLUE)

for c in V2.vertex_cycles():
    print(' '.join("%2d:%d" % (i,j) for i,j in enumerate(c) if j))
